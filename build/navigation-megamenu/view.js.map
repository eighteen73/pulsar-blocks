{"version":3,"file":"navigation-megamenu/view.js","mappings":";;;;AAAA,SAASA,iBAAiBA,CAACC,IAAI,EAAE;EAChC,MAAMC,IAAI,GAAGD,IAAI,CAACE,aAAa,CAAC,oCAAoC,CAAC;EACrE,MAAMC,QAAQ,GAAGH,IAAI,CAACE,aAAa,CAClC,iDACD,CAAC;;EAED;EACA,IAAI,CAACD,IAAI,IAAI,CAACE,QAAQ,EAAE;IACvB;EACD;;EAEA;EACA,MAAMC,QAAQ,GAAGH,IAAI,CAACI,qBAAqB,CAAC,CAAC;EAC7C,MAAMC,YAAY,GAAGH,QAAQ,CAACE,qBAAqB,CAAC,CAAC;;EAErD;EACA,MAAME,cAAc,GAAGC,UAAU,CAChCC,MAAM,CAACC,gBAAgB,CAACP,QAAQ,CAAC,CAACQ,SAAS,IAAI,CAChD,CAAC;EACD,MAAMC,QAAQ,GAAGN,YAAY,CAACO,GAAG,GAAGT,QAAQ,CAACU,MAAM,GAAGP,cAAc;;EAEpE;EACAP,IAAI,CAACe,KAAK,CAACC,WAAW,CAAC,mBAAmB,EAAE,GAAGJ,QAAQ,IAAI,CAAC;AAC7D;AAEA,SAASK,sBAAsBA,CAAA,EAAG;EACjC,MAAMC,SAAS,GAAGC,QAAQ,CAACC,gBAAgB,CAC1C,sCACD,CAAC;EAED,IAAI,CAACF,SAAS,CAACG,MAAM,EAAE;IACtB;EACD;;EAEA;EACAH,SAAS,CAACI,OAAO,CAAEnB,QAAQ,IAAK;IAC/BJ,iBAAiB,CAACI,QAAQ,CAAC;EAC5B,CAAC,CAAC;AACH;AAEA,SAASoB,QAAQA,CAACC,IAAI,EAAEC,KAAK,EAAE;EAC9B,IAAIC,SAAS;EACb,OAAO,UAAU,GAAGC,IAAI,EAAE;IACzB,IAAI,CAACD,SAAS,EAAE;MACfA,SAAS,GAAGE,UAAU,CAAC,MAAM;QAC5BJ,IAAI,CAACK,KAAK,CAAC,IAAI,EAAEF,IAAI,CAAC;QACtBD,SAAS,GAAG,IAAI;MACjB,CAAC,EAAED,KAAK,CAAC;IACV;EACD,CAAC;AACF;AAEA,MAAMK,sBAAsB,GAAGP,QAAQ,CAACN,sBAAsB,EAAE,GAAG,CAAC;;AAEpE;AACAR,MAAM,CAACsB,gBAAgB,CAAC,kBAAkB,EAAEd,sBAAsB,CAAC;AACnER,MAAM,CAACsB,gBAAgB,CAAC,QAAQ,EAAED,sBAAsB,CAAC,C","sources":["webpack://pulsar-blocks/./src/navigation-megamenu/view.js"],"sourcesContent":["function calculateDistance(item) {\n\tconst link = item.querySelector('.wp-block-navigation-item__content');\n\tconst megamenu = item.querySelector(\n\t\t'.wp-block-pulsar-navigation-megamenu__container'\n\t);\n\n\t// If the link or menu is not found, return\n\tif (!link || !megamenu) {\n\t\treturn;\n\t}\n\n\t// Get the position (top and bottom) of the link and menu\n\tconst linkRect = link.getBoundingClientRect();\n\tconst megamenuRect = megamenu.getBoundingClientRect();\n\n\t// Calculate the distance between the bottom of the link and the top of the menu\n\tconst existingMargin = parseFloat(\n\t\twindow.getComputedStyle(megamenu).marginTop || 0\n\t);\n\tconst distance = megamenuRect.top - linkRect.bottom - existingMargin;\n\n\t// Set the CSS variable with the calculated distance\n\titem.style.setProperty('--megamenu-offset', `${distance}px`);\n}\n\nfunction adjustMegamenuPosition() {\n\tconst megamenus = document.querySelectorAll(\n\t\t'.wp-block-pulsar-navigation-megamenu'\n\t);\n\n\tif (!megamenus.length) {\n\t\treturn;\n\t}\n\n\t// Iterate through megamenus to calculate the distance or reset the margin-top\n\tmegamenus.forEach((megamenu) => {\n\t\tcalculateDistance(megamenu);\n\t});\n}\n\nfunction throttle(func, delay) {\n\tlet timeoutId;\n\treturn function (...args) {\n\t\tif (!timeoutId) {\n\t\t\ttimeoutId = setTimeout(() => {\n\t\t\t\tfunc.apply(this, args);\n\t\t\t\ttimeoutId = null;\n\t\t\t}, delay);\n\t\t}\n\t};\n}\n\nconst throttledResizeHandler = throttle(adjustMegamenuPosition, 200);\n\n// On reload and resize, adjust the megamenu position\nwindow.addEventListener('DOMContentLoaded', adjustMegamenuPosition);\nwindow.addEventListener('resize', throttledResizeHandler);\n"],"names":["calculateDistance","item","link","querySelector","megamenu","linkRect","getBoundingClientRect","megamenuRect","existingMargin","parseFloat","window","getComputedStyle","marginTop","distance","top","bottom","style","setProperty","adjustMegamenuPosition","megamenus","document","querySelectorAll","length","forEach","throttle","func","delay","timeoutId","args","setTimeout","apply","throttledResizeHandler","addEventListener"],"sourceRoot":""}